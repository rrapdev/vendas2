
entity Venda {
	dataHora Instant required,
    
    valorTotalBruto BigDecimal,
   	valorTotalDesconto BigDecimal,
    valorTotalLiquido BigDecimal,
    valorTotalPago BigDecimal,
    valorSaldoRestante BigDecimal,
    
    observarcoes TextBlob,
    
    indicadorPossuiPagamentoPendente Boolean,
    indicadorPossuiItemPresente Boolean,
    indicadorBloqueio Boolean,
    
    dataHoraCadastro Instant,
    colaboradorCadastro String,
    dataHoraAtualizacao Instant,
    colaboradorAtualizacao String
}

entity Servico {
	nomeServico String required,
    valor BigDecimal,
    indicadorAtivo Boolean
}

entity ItemVenda {
	dataHora Instant,
	quantidade Integer required,
    valorUnitario BigDecimal,
    valorTotal BigDecimal,
    valorDescontoPercentual BigDecimal min(0) max(1),
    valorDescontoReal BigDecimal,
    valorTotalComDesconto BigDecimal,
    
    indicadorItemPresente Boolean,
    
    dataHoraCadastro Instant,
    colaboradorCadastro String,
    dataHoraAtualizacao Instant,
    colaboradorAtualizacao String
}

entity Cliente {
	nomeCompleto String required,
    telefone String,
    nomeApresentacao String,
    indicadorAtivo Boolean
}

entity Colaborador {
	nomeColaborador String required,
    nomeApresentacao String,
    indicadorAtivo Boolean
}

entity Pagamento {
	formaPagamento FormaPagamento required,
	dataHora Instant required,
    valor BigDecimal required,
    observacoes String,
    numeroParcelas Integer min(1),
    bandeiraCartao BandeiraCartao,
    clienteOrigemPagamento String,
    indicadorConferido Boolean,
    
    dataHoraCadastro Instant,
    colaboradorCadastro String,
    dataHoraAtualizacao Instant,
    colaboradorAtualizacao String
}

enum FormaPagamento {
	DINHEIRO, PIX, TRANSFERENCIA, CREDITO, DEBITO, 
    BOLETO, DEPOSITO, CHEQUE, PERMUTA, CARTEIRA_EMPRESA, OUTRO
}

enum BandeiraCartao {
	MASTERCARD, VISA, AMERICAN_EXPRESS, ELO,
    DISCOVER_NETWORK, HIPERCARD, DINERS_CLUB, OUTRO
}

//MAQUINETA - STONE, MAQUINETA - BANCO DO NORDESTE, SITE - PAGSEGURO,
//STONE - LINK PAGAMENTO, STONE - LINK PAGAMENTO, STONE - BOLETO,
//SANTANDER EMPRESA
entity PlataformaPagamento {
	nomePlataformaPagamento String required,
    indicadorAtivo Boolean
}

entity CarteiraCliente {
	nomeCarteiraCliente String required,
    saldoConsolidado BigDecimal,
    tipoIndicadorSaldo TipoSaldo,
    indicadorBloqueio Boolean,
    dataHoraCadastro Instant,
    colaboradorCadastro String,
    dataHoraAtualizacao Instant,
    colaboradorAtualizacao String
}

enum TipoSaldo {
	POSITIVO, NEGATIVO
}

entity LancamentoCarteiraCliente {
	descricaoLancamento String required,
	dataHora Instant,
	valorCredito BigDecimal,
    valorDebito BigDecimal,
    observacoes String,
    indicadorBloqueio Boolean,
    dataHoraCadastro Instant,
    colaboradorCadastro String,
    dataHoraAtualizacao Instant,
    colaboradorAtualizacao String
}

relationship OneToOne {
	Cliente{carteiraCliente(nomeCarteiraCliente)} to CarteiraCliente,
    LancamentoCarteiraCliente{venda} to Venda,
    LancamentoCarteiraCliente{pagamento} to Pagamento
}

relationship ManyToOne {
    Venda{clienteQueComprou(nomeCompleto)} to Cliente,
    
    ItemVenda{servico(nomeServico)} to Servico,
    ItemVenda{colaboradorQueIndicou(nomeApresentacao)} to Colaborador,
    ItemVenda{clienteQueVaiRealizar(nomeCompleto)} to Cliente,
    
    Pagamento{adquirentePagamento(nomePlataformaPagamento)} to PlataformaPagamento
}

relationship ManyToMany {
	Venda{colaboradoresQueIndicaram(nomeApresentacao)} to Colaborador{vendas},
    Venda{itensVenda(quantidade)} to ItemVenda{vendas},
    Venda{pagamentos(valor)} to Pagamento{vendas},
    
    CarteiraCliente{lancamentoCarteiraCliente(descricaoLancamento)} to LancamentoCarteiraCliente{carteirasCliente}
}

paginate * with pagination
dto * with mapstruct
service all with serviceImpl
filter *
